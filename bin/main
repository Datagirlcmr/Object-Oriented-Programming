#!/usr/bin/env ruby
require "./lib/player.rb"
require "./lib/board.rb"

class Game
    def initialize(player1, player2)
      @player1 = player1
      @player2 = player2
      @playing = true
      @player = nil
      @board = Board.new
    end
  
    def play
      puts @board.start_display(@player1, @player2)
      @player = @player1
      while @playing
        puts @board.display
        puts "#{@player.name} It is your turn to play"
        puts
  
        player_move
  
        if a_win?
          @player.wins += 1
          puts @board.display
          puts @board.win_display(@player, @player1, @player2)
          @playing = false
  
        end
  
        game_end
        turn
      end
    end
  
    def player_move
      moves_error = true
      while moves_error
        puts 'Select a move from the available moves: '
        puts @board.availables
        num = gets.chomp.to_i
        num -= 1
        if num >= 0 && num <= 8
          num_ok = @board.available?(num)
          if num_ok
            moves_error = false
            @board.moves[num] = @player.symbol
            puts "#{@player.name} has played the move at #{num + 1}"
          else
            errors('invalid_num')
          end
        else
          errors('invalid_num')
        end
  
      end
    end
  
    def turn
      @player = if @player.number == @player1.number
                  @player2
                else
                  @player1
                end
    end
  
    def game_end
      if @playing && @board.full?
        @playing = false
        @board.display
        puts @board.draw_display
      end
      play_again unless @playing
    end
  
    def play_again
      puts 'Play Again? Y for Yes or N for No?'
      not_answered = true
      while not_answered
        answ = gets.chomp.downcase
        if answ.to_s == 'y'
          @board.reset
          @playing = true
          not_answered = false
          puts "Great! Let's Play Again"
          play
        elsif answ.to_s == 'n'
          puts @board.start_display(@player1, @player2)
          puts 'Thank you for playing! See you next time! :-)'
          puts
          not_answered = false
        else
          puts 'Please type Y or N'
  
        end
      end
    end
  
    def a_win?
      wins = []
      wins << @board.moves[0].to_s + @board.moves[1].to_s + @board.moves[2].to_s
      wins << @board.moves[3].to_s + @board.moves[4].to_s + @board.moves[5].to_s
      wins << @board.moves[6].to_s + @board.moves[7].to_s + @board.moves[8].to_s
      wins << @board.moves[0].to_s + @board.moves[3].to_s + @board.moves[6].to_s
      wins << @board.moves[1].to_s + @board.moves[4].to_s + @board.moves[7].to_s
      wins << @board.moves[2].to_s + @board.moves[5].to_s + @board.moves[8].to_s
      wins << @board.moves[0].to_s + @board.moves[4].to_s + @board.moves[8].to_s
      wins << @board.moves[2].to_s + @board.moves[4].to_s + @board.moves[6].to_s
  
      player1_win = 'XXX'
      player2_win = 'OOO'
      wins.each do |x|
        return true if x == player1_win || x == player2_win
      end
      false
    end
  
    def errors(code)
      errors = {
        invalid_num: "Sorry. Your move is not available. Please try again \n"
      }
  
      if errors[code.to_sym]
        puts errors[code.to_sym]
      else
        puts 'Oops! error code not found!'
      end
    end
end
  




def tic_tac_toe
    puts "Welcome to TIC TAC Toe"
    puts "Tic-tac-toe is a game for two players, X and O, who take turns marking the spaces in a 3Ã—3 grid. \nThe player who succeeds in placing three of their marks in a horizontal, vertical, or diagonal row is the winner. \n"
    puts
    puts "Hello Player 1. What's your Name?"
    player1_name = gets.chomp
    puts
    puts "Choose your Symbol: X or O"
    symbole_not=true
    
    while symbole_not
        player1_symbol = gets.chomp.to_s.upcase
        puts player1_symbol
        if player1_symbol == "X"
            player2_symbol = "O"
            symbole_not=false
        elsif player1_symbol == "O"
            player2_symbol = "X"
            symbole_not=false
        else
            puts "Please enter X or O"
        end
    end

    puts "Welcome #{player1_name} Your symbol is #{player1_symbol}"
    puts
    puts "Hello Player 2. What's your Name?"
    player2_name = gets.chomp
    puts "Welcome #{player2_name} Your symbol is #{player2_symbol} \n"

    player1 = Player.new(1, player1_name,player1_symbol)
    player2 = Player.new(1, player2_name,player2_symbol)
    game = Game.new(player1,player2)
    game.play
end


tic_tac_toe


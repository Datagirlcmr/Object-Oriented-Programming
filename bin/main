#!/usr/bin/env ruby
require "./lib/player.rb"
require "./lib/board.rb"
class Game
    def initialize(player1_name,player2_name)
        
        @player1 =Player.new(1,player1_name)
        @player2 =Player.new(2,player2_name)
        @playing=true
        @player=nil
        @board = Board.new
        
    end

    def play
        puts @board.start_display(@player1, @player2)
        @player = @player1
        while @playing
            puts @board.display      
            puts "#{@player.name} It is your turn to play"
            puts
            moves_error = true
            while moves_error
                puts "Select a move from the available moves: "
                
                puts @board.availables 
                num = gets.chomp.to_i
                num = num- 1
                if num >= 0 && num <= 8
                    if @board.available?(num)
                        moves_error = false
                        @board.moves[num] = @player.symbol
                        puts "#{@player.name} has played the move at #{num+1}"
                    else
                        errors("invalid_num")
                    end
                else
                    errors("invalid_num")
                end
            end
            if is_a_win?
                @player.wins += 1
                puts @board.display
                puts @board.win_display(@player,@player1,@player2) 
                @playing = false
                
            end
            
            game_end
            turn   
        end   
    end

    def turn
        if @player.number == @player1.number
            @player = @player2
        else
            @player = @player1
        end
        
    end

    def game_end
        board_full = @board.is_full?   
            
        if @playing && board_full
            @playing = false
            @board.display
            puts @board.draw_display        
            
        end
        
        play_again

    end

    def play_again
        if !@playing
            puts "Play Again? Y for Yes or N for No?"
            answ = gets.chomp.downcase
            if answ.to_s =="y"
                @board.reset
                @playing=true
                puts "Great! Let's Play Again"
                play
            elsif answ.to_s=="n"
                puts "Thank you for playing! See you next time!"
            else
                puts "Please type Y or N"
                false
            end
        end
    end

    def is_a_win?
        wins =[];
        wins << row1 = @board.moves[0].to_s + @board.moves[1].to_s + @board.moves[2].to_s # X+X+X => XXX // OOO
        wins << row2 = @board.moves[3].to_s + @board.moves[4].to_s + @board.moves[5].to_s
        wins << row3 = @board.moves[6].to_s + @board.moves[7].to_s + @board.moves[8].to_s
        wins << col1 = @board.moves[0].to_s + @board.moves[3].to_s + @board.moves[6].to_s
        wins << col2 = @board.moves[1].to_s + @board.moves[4].to_s + @board.moves[7].to_s
        wins << col3 = @board.moves[2].to_s + @board.moves[5].to_s + @board.moves[8].to_s
        wins << diag1 = @board.moves[0].to_s + @board.moves[4].to_s + @board.moves[8].to_s
        wins << diag2 = @board.moves[2].to_s + @board.moves[4].to_s + @board.moves[6].to_s
        
        player1_win = "XXX"
        player2_win = "OOO"
        wins.each do |x|
            if x== player1_win || x== player2_win
               return true
            end
            
        end
        return false
    end

    def errors(code)
        errors = {
            invalid_num: "Sorry. Your move is not available. Please try again \n"
        }

        if errors[code.to_sym]
            puts errors[code.to_sym]
        else
            puts "Oops! error code not found!"
        end
    end
end



def play_game
    puts "Welcome to TIC TAC Toe"
    puts "Tic-tac-toe is a game for two players, X and O, who take turns marking 
    the spaces in a 3Ã—3 grid. The player who succeeds in placing 
    three of their marks in a horizontal, vertical, or diagonal row is the winner. \n"
    puts
    puts "Hello Player 1. What's your Name?"
    player1_name = gets.chomp
    puts
    puts "Welcome #{player1_name} Your symbol is X"
    puts
    puts "Hello Player 2. What's your Name?"
    player2_name = gets.chomp
    puts "Welcome #{player2_name} Your symbol is O \n"
    game = Game.new(player1_name,player2_name)
    game.play
end

def tests
    
    check = Board.new
    p check.free_moves?
end

play_game
#tests
